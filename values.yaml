# Default values for app1.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 1720065422xx.dkr.ecr.ap-southeast-1.amazonaws.com/yourImage
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "dev"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

env:
  - name: AUTH_BASE_URL
    value: "http://domainName-auth-production.ap-southeast-1.elasticbeanstalk.com"
  - name: AWS_BUCKET
    value: "new.domainName"
  # secret:
  #   secret: "true"

service:
  type: ClusterIP
  port: 80
  targetPort: 3000 #ini harus sesuai port di Docker containernya

ingress:
  enabled: true
  className: "nginx" #ini kalau pake kong ganti jadi kong
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: api-dev.domainName.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: # ini juga sesuaikan sama kebutuhan apps nya
  limits:
    cpu: 150m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 80Mi

autoscaling:
  enabled: false
  minReplicas: 5
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

podDisruptionBudget:
  enabled: false
  minAvailable: 2
  # maxUnavailable: 1
  # labels: {}

## yang dari sini sampe bawah kalo ga mo dipake juga gpp, dihapus aja ato di pagerin
nodeSelector: {}

tolerations: []

startupProbe:
  enabled: true
  httpGet:
    path: /
    port: 3000
  initialDelaySeconds: 0
  timeoutSeconds: 5
  periodSeconds: 10
  failureThreshold: 30
  successThreshold: 1

readinessProbe:
  enabled: false
  httpGet:
    path: /
    port: 3000
  initialDelaySeconds: 0
  timeoutSeconds: 5
  periodSeconds: 10
  failureThreshold: 30
  successThreshold: 1

livenessProbe:
  enabled: false
  httpGet:
    path: /
    port: 3000
  initialDelaySeconds: 150
  timeoutSeconds: 60
  periodSeconds: 30
  failureThreshold: 3
  successThreshold: 1

strategy:
  type: RollingUpdate 
  rollingUpdate:
    maxUnavailable: 50%
    maxSurge: 50%
